input:
    input.go: |
        package primitive

        // genconv:converter
        type Converter interface {
            ConvertString(source string) string
            ConvertPString(source string) *string
            ConvertID(source ID) OtherID
            ConvertPID(source ID) *OtherID
            ConvertInt(source int) int
            ConvertInt8(source int8) int8
            ConvertInt16(source int16) int16
            ConvertInt32(source int32) int32
            ConvertInt64(source int64) int64
            ConvertUint(source uint) uint
            ConvertUint8(source uint8) uint8
            ConvertUint16(source uint16) uint16
            ConvertUint32(source uint32) uint32
            ConvertUint64(source uint64) uint64
            ConvertBool(source bool) bool
            ConvertComplex128(source complex128) complex128
            ConvertComplex64(source complex64) complex64
            ConvertFloat32(source float32) float32
            ConvertFloat64(source float64) float64
        }
        type ID int
        type OtherID int
success: |
    // Code generated by github.com/jmattheis/go-genconv, DO NOT EDIT.

    package generated

    import execution "github.com/jmattheis/go-genconv/test/execution"

    type Converter struct{}

    func (c *Converter) ConvertBool(source bool) bool {
    	return source
    }
    func (c *Converter) ConvertComplex128(source complex128) complex128 {
    	return source
    }
    func (c *Converter) ConvertComplex64(source complex64) complex64 {
    	return source
    }
    func (c *Converter) ConvertFloat32(source float32) float32 {
    	return source
    }
    func (c *Converter) ConvertFloat64(source float64) float64 {
    	return source
    }
    func (c *Converter) ConvertID(source execution.ID) execution.OtherID {
    	return execution.OtherID(source)
    }
    func (c *Converter) ConvertInt(source int) int {
    	return source
    }
    func (c *Converter) ConvertInt16(source int16) int16 {
    	return source
    }
    func (c *Converter) ConvertInt32(source int32) int32 {
    	return source
    }
    func (c *Converter) ConvertInt64(source int64) int64 {
    	return source
    }
    func (c *Converter) ConvertInt8(source int8) int8 {
    	return source
    }
    func (c *Converter) ConvertPID(source execution.ID) *execution.OtherID {
    	return &execution.OtherID(source)
    }
    func (c *Converter) ConvertPString(source string) *string {
    	return &source
    }
    func (c *Converter) ConvertString(source string) string {
    	return source
    }
    func (c *Converter) ConvertUint(source uint) uint {
    	return source
    }
    func (c *Converter) ConvertUint16(source uint16) uint16 {
    	return source
    }
    func (c *Converter) ConvertUint32(source uint32) uint32 {
    	return source
    }
    func (c *Converter) ConvertUint64(source uint64) uint64 {
    	return source
    }
    func (c *Converter) ConvertUint8(source uint8) uint8 {
    	return source
    }
