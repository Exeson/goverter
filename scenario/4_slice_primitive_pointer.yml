input:
    input.go: |
        package slices

        // genconv:converter
        type Converter interface {
            ConvertToP(source []int) []*int
            ConvertPToP(source []*int) []*int
        }
success: |
    // Code generated by github.com/jmattheis/go-genconv, DO NOT EDIT.

    package generated

    type Converter struct{}

    func (c *Converter) ConvertPToP(source []*int) []*int {
    	targetSlice := make([]*int, len(source))
    	for i := 0; i < len(source); i++ {
    		var outer *int
    		if source[i] != nil {
    			temp := *source[i]
    			outer = &temp
    		}
    		targetSlice[i] = outer
    	}
    	return targetSlice
    }
    func (c *Converter) ConvertToP(source []int) []*int {
    	targetSlice := make([]*int, len(source))
    	for i := 0; i < len(source); i++ {
    		ref := source[i]
    		targetSlice[i] = &ref
    	}
    	return targetSlice
    }
