input:
    input.go: |
        package structs

        // genconv:converter
        type Converter interface {
            Convert(source DBModel) ApiModel
        }

        type DBModel struct {
            Inner *DBInner
        }
        type DBInner struct {
            Name string
            Value int
        }

        type ApiModel struct {
            Inner *ApiInner
        }
        type ApiInner struct {
            Name string
            Value int
        }
success: |
    // Code generated by github.com/jmattheis/go-genconv, DO NOT EDIT.

    package generated

    import execution "github.com/jmattheis/go-genconv/execution"

    type Converter struct{}

    func (c *Converter) structsDBInnerToStructsApiInner(source execution.DBInner) execution.ApiInner {
    	var apiInner execution.ApiInner
    	apiInner.Name = source.Name
    	apiInner.Value = source.Value
    	return apiInner
    }
    func (c *Converter) Convert(source execution.DBModel) execution.ApiModel {
    	var apiModel execution.ApiModel
    	var outer *execution.ApiInner
    	if source.Inner != nil {
    		temp := c.structsDBInnerToStructsApiInner(*source.Inner)
    		outer = &temp
    	}
    	apiModel.Inner = outer
    	return apiModel
    }
