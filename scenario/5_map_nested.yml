input:
    input.go: |
        package slices

        // genconv:converter
        type Converter interface {
            Convert(source map[string]map[uint]map[bool]string) map[string]map[uint]map[bool]string
        }
success: |
    // Code generated by github.com/jmattheis/go-genconv, DO NOT EDIT.

    package generated

    type Converter struct{}

    func (c *Converter) Convert(source map[string]map[uint]map[bool]string) map[string]map[uint]map[bool]string {
    	targetMap := make(map[string]map[uint]map[bool]string, len(source))
    	for key, value := range source {
    		targetMap2 := make(map[uint]map[bool]string, len(value))
    		for key2, value2 := range value {
    			targetMap3 := make(map[bool]string, len(value2))
    			for key3, value3 := range value2 {
    				targetMap3[key3] = value3
    			}
    			targetMap2[key2] = targetMap3
    		}
    		targetMap[key] = targetMap2
    	}
    	return targetMap
    }
