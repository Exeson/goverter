input:
    input.go: |
        package primitive

        // genconv:converter
        type Converter interface {
            Convert(source ID) OtherID
            Convert2(source ID) *OtherID
            Convert3(source int) *OtherID
            Convert4(source ID) int
        }
        type ID int
        type OtherID int
success: |
    // Code generated by github.com/jmattheis/go-genconv, DO NOT EDIT.

    package generated

    import execution "github.com/jmattheis/go-genconv/execution"

    type Converter struct{}

    func (c *Converter) Convert(source execution.ID) execution.OtherID {
    	return execution.OtherID(source)
    }
    func (c *Converter) Convert2(source execution.ID) *execution.OtherID {
    	pPrimitiveOtherID := c.Convert(source)
    	return &pPrimitiveOtherID
    }
    func (c *Converter) Convert3(source int) *execution.OtherID {
    	pPrimitiveOtherID := execution.OtherID(source)
    	return &pPrimitiveOtherID
    }
    func (c *Converter) Convert4(source execution.ID) int {
    	return int(source)
    }
