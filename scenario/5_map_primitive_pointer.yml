input:
    input.go: |
        package slices

        // genconv:converter
        type Converter interface {
            Convert(source map[string]int) map[string]*int
            Convert2(source map[string]*int) map[string]*int
        }
success: |
    // Code generated by github.com/jmattheis/go-genconv, DO NOT EDIT.

    package generated

    type Converter struct{}

    func (c *Converter) Convert(source map[string]int) map[string]*int {
    	mapStringPInt := make(map[string]*int, len(source))
    	for key, value := range source {
    		pInt := value
    		mapStringPInt[key] = &pInt
    	}
    	return mapStringPInt
    }
    func (c *Converter) Convert2(source map[string]*int) map[string]*int {
    	mapStringPInt := make(map[string]*int, len(source))
    	for key, value := range source {
    		var pInt *int
    		if value != nil {
    			xint := *value
    			pInt = &xint
    		}
    		mapStringPInt[key] = pInt
    	}
    	return mapStringPInt
    }
