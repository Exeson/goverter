input:
    input.go: |
        package slices

        // genconv:converter
        type Converter interface {
            Convert(source map[string]int) map[string]*int
            Convert2(source map[string]*int) map[string]*int
        }
success: |
    // Code generated by github.com/jmattheis/go-genconv, DO NOT EDIT.

    package generated

    type Converter struct{}

    func (c *Converter) Convert(source map[string]int) map[string]*int {
    	targetMap := make(map[string]*int, len(source))
    	for key, value := range source {
    		ref := value
    		targetMap[key] = &ref
    	}
    	return targetMap
    }
    func (c *Converter) Convert2(source map[string]*int) map[string]*int {
    	targetMap := make(map[string]*int, len(source))
    	for key, value := range source {
    		var outer *int
    		if value != nil {
    			temp := *value
    			outer = &temp
    		}
    		targetMap[key] = outer
    	}
    	return targetMap
    }
